// Top-level build file where you can add configuration options common to all sub-projects/modules.

apply from: 'dependencies.gradle'

buildscript {
    // Gradle will not find vars defined in an external file when referring to them
    // in the buildscript block, unless you link it from the buildscript block, too.
    apply from: 'dependencies.gradle'

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$vers.kotlin"
        // classpath "org.jetbrains.kotlin:kotlin-android-extensions:$versions.kotlin"
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://jitpack.io"
        }
    }

    repositories {
        maven {
            url "https://clojars.org/repo/"
        }
    }

    // Prevent Gradle Workers from taking focus! #DevelopersLikeComfort
    // https://gist.github.com/artem-zinnatullin/4c250e04636e25797165
    tasks.withType(JavaForkOptions) {
        jvmArgs '-Djava.awt.headless=true'
    }
}

// Option to disable Pre-Dexing on CI env.
project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ('com.android.build.gradle.AppPlugin'.equals(plugin.class.name)
                || 'com.android.build.gradle.LibraryPlugin'.equals(plugin.class.name)) {

            // Enable or disable pre-dexing.
            project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs

            // Treat all Android Lint warning in all sub-projects as errors.
            project.android.lintOptions.warningsAsErrors = true

            project.android.testOptions.unitTests.all {
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                    exceptionFormat 'full'
                }
            }
        }
    }
}
